# -*- coding: utf-8 -*-
"""TOI_5126 SPOCK Extra Planet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NcNpARICe-2jmSw4rZw_1HZN6B01rkvp
"""

# %matplotlib inline
import rebound
import numpy as np
from numpy import pi
import matplotlib.pyplot as plt
import os
from spock import FeatureClassifier
import pdb
import random
import csv
from os.path import dirname, join as pjoin
import scipy.io as sio
from scipy.io import readsav
from astropy.io import fits
from astropy.table import Table
import seaborn as sns
# SET-UP
# Units: G = 1 Solar mass, AU, years/(2*pi)

G = 6.67408*10**(-11)   # gravitational constant 
Mearth = 5.9722*10**24  # kg
Rearth = 6.371*10**6  # meters
Msun = 1.98911*10**30 # kg
Rsun = 6.95*10**8 # meters
Mjup = 1.898*10**27  # kg
Rjup = 7.1492*10**7 # meters
year = 365.25*24*60*60  # years in seconds
AU = (G*Msun*(year**2)/(4.*np.pi**2))**(1./3.)  # meters

# System Parameters:
m_star = 1.22 # Solar masses

def spockrun(par):
    feature_model = FeatureClassifier()
    m3, a3, M1, M2, M3, omega1, omega2, omega3, inc1, inc2, inc3, e3 = par # unpack parameters
    sim = rebound.Simulation()
    sim.add(m = 1.22) # Star
    sim.add(m = (1.74*(4.897)**1.58)*(Mearth/Msun), a = (m_star*(5.46/(365.25))**2)**(1/3), M=M1, omega=omega1, e=0, inc = inc1) #b
    sim.add(m = (1.74*(4.43)**1.58)*(Mearth/Msun), a = (m_star*(17.9/(365.25))**2)**(1/3), M=M2, omega=omega2, e=0, inc = inc2) #c
    sim.add(m = m3, a = a3, M=M3, omega=omega3, e=e3, inc = inc3) #hypothetical third planet
    sim.move_to_com()
    return feature_model.predict_stable(sim)

m2 = (1.74*(4.43)**1.58)*(Mearth/Msun) 
m1 = (1.74*(4.897)**1.58)*(Mearth/Msun)

m3 = (m1 + m2) / 2 # Fixing the mass of the injected planet (shouldn't matter what the mass is because there doesn't seem to be a mass dependence)
earr = np.linspace(0, 0.3, 100)
aarr = np.linspace(0.01, 0.3, 100) #AU
spockarr = []
for i in range(100):
    e3 = earr[i]
    for j in range(100):
        a3 = aarr[j]
        for k in range(1):
            M1 = random.uniform(0, 2*np.pi)
            M2 = random.uniform(0, 2*np.pi)
            M3 = random.uniform(0, 2*np.pi)
            omega1 = random.uniform(0, 2*np.pi)
            omega2 = random.uniform(0, 2*np.pi)
            omega3 = random.uniform(0, 2*np.pi)
            inc1 = np.random.rayleigh(scale = np.pi/180)
            inc2 = np.random.rayleigh(scale = np.pi/180)
            inc3 = np.random.rayleigh(scale = np.pi/180)
            spock = spockrun((m3, a3, M1, M2, M3, omega1, omega2, omega3, inc1, inc2, inc3, e3))
            #print(spock)
            spockarr.append(spock)
print(spockarr)

